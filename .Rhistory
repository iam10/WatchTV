source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
install.packages(c("quantmod", "zoo"))
source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
AMCHD
source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
AMCHD
source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
AMCHD
source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
pd.DataFrame(grid_channels$SourceId, grid_channels$CallLetters)
data.frame(grid_channels$SourceId, grid_channels$CallLetters)
temp <- data.frame(grid_channels$SourceId, grid_channels$CallLetters)
temp[grepl(call_letters2[1], temp),]
temp[grepl(call_letters2[1], temp[2]),]
call_letters2[1]
temp[2]
temp[grepl(call_letters2[1], temp[2]),]
temp[grepl(call_letters2[1], temp),]
temp[grepl(call_letters2, temp),]
temp[2]
temp[1]
temp[0]
grepl(call_letters2[1], temp[2])
grepl(call_letters2[1], temp[2][:])
grepl(call_letters2[1], temp[2][;])
grepl(call_letters2[1], temp[2][])
temp
temp[order(temp[2])]
temp[order(temp$grid_channels.CallLetters)]
temp[order(temp$grid_channels.CallLetters)]
names(temp)
grepl(call_letters2[1], temp$grid_channels.CallLetters)
temp[grepl(call_letters2[1], temp$grid_channels.CallLetters),]
temp[grepl(call_letters2[2], temp$grid_channels.CallLetters),]
temp[grepl(call_letters2[3], temp$grid_channels.CallLetters),]
temp[grepl(call_letters2[4], temp$grid_channels.CallLetters),]
grid_channels[grepl(call_letters2[4], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[5], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[6], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[7], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[8], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[9], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[10], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[11], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[12], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[13], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[14], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[14], grid_channels$CallLetters),]
source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
grid_channels[grepl(call_letters2[14], grid_channels$CallLetters),]
source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
grid_channels[grepl(call_letters2[14], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[15], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[16], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[17], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[18], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[19], grid_channels$CallLetters),]
source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
grid_channels[grepl(call_letters2[19], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[20], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[21], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[22], grid_channels$CallLetters),]
grid_channels[grepl(call_letters2[21], grid_channels$CallLetters),]
source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
my_channels
str(my_channels)
my_channels$CallLetters
call_letters2
length(call_letters2)
length(my_channels)
length(my_channels$CallLetters)
length(my_channels)
length(my_channels$CallLetters)
length(call_letters2)
grid_channels[grep("nbc", grid_channels$CallLetters),]
grid_channels[grep("cbs", grid_channels$CallLetters),]
grid_channels[grep("abc", grid_channels$CallLetters),]
grid_channels$CallLetters)
grid_channels$CallLetters
source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
grid_channels$CallLetters
grid_channels$SourceId[57]
grid_channels$SourceId[58]
grid_channels[grep("abc", grid_channels$CallLetters),]
grid_channels[grep("nbc", grid_channels$CallLetters),]
grid_channels[grep("espn", grid_channels$CallLetters),]
grid_channels[grep("ESPN", grid_channels$CallLetters),]
grid_channels[grep("TNT", grid_channels$CallLetters),]
grid_channels$CallLetters
source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
grid_channels$CallLetters
grid_channels[grep("A&E", grid_channels$CallLetters),]
grid_channels[grep(call_letters2[2], grid_channels$CallLetters),]
grid_channels[grep(call_letters2[3], grid_channels$CallLetters),]
grid_channels[grep(call_letters2[4], grid_channels$CallLetters),]
grid_channels$CallLetters
grid_channels[grep("ABC", grid_channels$CallLetters),]
grid_channels[grep("cbs", grid_channels$CallLetters),]
grid_channels[grep("CBS", grid_channels$CallLetters),]
grid_channels$CallLetters
grid_channels$DisplayName
grid_channels[grep("CBS", grid_channels$DisplayName),]
grid_channels[grep("NBC", grid_channels$DisplayName),]
grid_channels[grep("ABC", grid_channels$DisplayName),]
grid_channels[grep("FOX", grid_channels$DisplayName),]
grid_channels[grep("univision", grid_channels$DisplayName),]
grid_channels[grep("uni", grid_channels$DisplayName),]
grid_channels[grep("UNI", grid_channels$DisplayName),]
grid_channels[grep("ESPN", grid_channels$DisplayName),]
grid_channels[grep("TBS", grid_channels$DisplayName),]
grid_channels[grep("FOX", grid_channels$DisplayName),]
grid_channels[grepl("FOX", grid_channels$DisplayName),]
grid_channels[grepl("NEWS", grid_channels$DisplayName),]
grid_channels[grepl("NEWS", grid_channels$SourceLongName),]
grid_channels[grepl("news", grid_channels$SourceLongName),]
grid_channels[grepl("news", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("cw", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("dis", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("his", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("hgtv", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("hgtv", grid_channels$DisplayName, ignore.case = TRUE),]
grid_channels[grepl("amc", grid_channels$DisplayName, ignore.case = TRUE),]
grid_channels[grepl("telemundo", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("adult swim", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("adult", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("fx", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("food", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("abc", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("lifetime", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("syfy", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("A&E", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("tlc", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("tlc", grid_channels$DisplayName, ignore.case = TRUE),]
grid_channels[grepl("hallmark", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("bravo", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("sp[ike", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("spike", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("cnn", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("cnn", grid_channels$DisplayName, ignore.case = TRUE),]
grid_channels[grepl("animal", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("disney", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("vh1", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("land", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("mtv", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("bet", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("bet", grid_channels$DisplayName, ignore.case = TRUE),]
grid_channels[grepl("msnbc", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("comedy", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("e!", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("national", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("own", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("own", grid_channels$DisplayName, ignore.case = TRUE),]
grid_channels[grepl("we", grid_channels$DisplayName, ignore.case = TRUE),]
grid_channels[grepl("tru", grid_channels$DisplayName, ignore.case = TRUE),]
grid_channels[grepl("lmn", grid_channels$DisplayName, ignore.case = TRUE),]
grid_channels[grepl("nick", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("travel", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("gsn", grid_channels$DisplayName, ignore.case = TRUE),]
grid_channels[grepl("espn", grid_channels$DisplayName, ignore.case = TRUE),]
grid_channels[grepl("fxx", grid_channels$DisplayName, ignore.case = TRUE),]
grid_channels[grepl("hallmark", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("hmm", grid_channels$DisplayName, ignore.case = TRUE),]
grid_channels[grepl("fox", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("fox sports", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("insp", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("nbc sports", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("cnbc", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("nbc", grid_channels$DisplayName, ignore.case = TRUE),]
grid_channels[grepl("disney", grid_channels$SourceLongName, ignore.case = TRUE),]
grid_channels[grepl("h2", grid_channels$DisplayName, ignore.case = TRUE),]
grid_channels[grepl("hln", grid_channels$DisplayName, ignore.case = TRUE),]
source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
length call_letters_top
length(call_letters_top)
length(call_letters_top_ID)
source('C:/Users/Ian/Dropbox/WatchTV/WatchTV.R')
my_channels$CallLetters
length(my_channels$CallLetters)
duplicated(my_channels)
which(call_letters_top != my_channels$CallLetters)
all(call_letters_top == my_channels$CallLetters)
my_channels[duplicated(my_channels)]
install.packages(praw)
